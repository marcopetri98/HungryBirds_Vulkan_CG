#pragma once

#ifndef ERRORS_H_
#define ERRORS_H_

#include <string>

using std::string;

namespace errors
{
	enum class Error
	{
		VULKAN_FAIL_CREATE_INSTANCE,
		VULKAN_FAIL_VALIDATION_LAYERS,
		VULKAN_FAIL_DEBUG_MESSENGER,
		VULKAN_FAIL_NO_GPU_PRESENT,
		VULKAN_FAIL_NO_GPU_IS_SUITABLE,
		VULKAN_FAIL_CREATE_LOGICAL_DEVICE,
		VULKAN_FAIL_CREATE_SURFACE,
		VULKAN_FAIL_CREATE_SWAP_CHAIN,
		VULKAN_FAIL_CREATE_IMAGE_VIEWS,
		VULKAN_FAIL_CREATE_SHADER_MODULE,
		VULKAN_FAIL_CREATE_PIPELINE_LAYOUT,
		VULKAN_FAIL_CREATE_RENDER_PASS,
		VULKAN_FAIL_CREATE_GRAPHIC_PIPELINES,
		VULKAN_FAIL_CREATE_FRAME_BUFFER,
		VULKAN_FAIL_CREATE_COMMAND_POOL,
		VULKAN_FAIL_ALLOCATE_COMMAND_BUFFER,
		VULKAN_FAIL_BEGIN_RECORD_COMMAND_BUFFER,
		VULKAN_FAIL_RECORD_COMMAND_BUFFER,
		VULKAN_FAIL_SUBMIT_DRAW_COMMAND_BUFFER,
		VULKAN_FAIL_CREATE_SYNCHRONIZATION_OBJECTS,
		VULKAN_FAIL_ACQUIRE_SWAP_CHAIN_IMAGE,
		VULKAN_FAIL_CREATE_VERTEX_BUFFER,
		VULKAN_FAIL_FIND_SUITABLE_MEMORY_TYPE,
		VULKAN_FAIL_ALLOCATE_VERTEX_BUFFER_MEMORY,
		VULKAN_FAIL_CREATE_DESCRIPTOR_SET_LAYOUT,
		VULKAN_FAIL_CREATE_DESCRIPTOR_POOL,
		VULKAN_FAIL_ALLOCATE_DESCRIPTOR_SET,
		STB_FAIL_LOAD_IMAGE,
		VULKAN_FAIL_CREATE_IMAGE,
		VULKAN_FAIL_ALLOCATE_IMAGE,
		VULKAN_FAIL_DOESNT_SUPPORT_TRANSITION_LAYOUT,
		VULKAN_FAIL_CREATE_TEXTURE_SAMPLER,
		IMAGE_FORMAT_REQUIREMENTS_TOO_STRICT,
		VULKAN_FAIL_IMAGE_BLITTING
	};

	string getErrorStr(Error type);
}

#endif
